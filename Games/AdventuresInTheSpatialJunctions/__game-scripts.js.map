{"version":3,"sources":["Scripts/objectcontroller.js","Scripts/charactercontroller.js","Scripts/Blue_doorTrigger.js","Scripts/Junction Managers/JUNCTION_MANAGER.js","Scripts/Junction Managers/JUNCTION_MANAGER_002.js","Scripts/Junction Managers/JUNCTION_MANAGER_003.js","Scripts/blue_keyPickup.js","Scripts/telephoneController.js","Scripts/SceneManager.js","Scripts/tutorialTextCycler.js","Scripts/enemyController.js","Scripts/rotate.js","Scripts/bulletMove.js","Scripts/cameraMoveLoop.js","Scripts/red_keyPickup.js","Scripts/red_doorTrigger.js","Scripts/warpJunction.js"],"names":[],"mappings":"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","sourcesContent":["// objectcontroller.js\nvar Objectcontroller = pc.createScript('objectcontroller');\nvar moveMult = 3;\nvar fwd = 0;\nvar lr = 0;\nvar rot = 0;\n// initialize code called once per entity\nObjectcontroller.prototype.initialize = function() {\n    \n};\n\n// update code called every frame\nObjectcontroller.prototype.update = function(dt) {\n    //Update Input\n    W = this.app.keyboard.isPressed(pc.KEY_W);\n    A = this.app.keyboard.isPressed(pc.KEY_A);\n    S = this.app.keyboard.isPressed(pc.KEY_S);\n    D = this.app.keyboard.isPressed(pc.KEY_D);\n    \n    arrow_right = this.app.keyboard.isPressed(pc.KEY_RIGHT);\n    arrow_left = this.app.keyboard.isPressed(pc.KEY_LEFT);\n    \n    //Move Forward and Backward\n    if (W) {\n        fwd = 0.01;\n    }\n    \n    if (S) {\n        fwd = -0.01;\n    }\n    \n    if (!S & !W){\n        fwd = 0;\n    }\n    \n    //Strafe Left and Right\n    if (D){\n        lr = 0.01;\n    }\n    \n    if (A) {\n        lr = -0.01;\n    }\n    \n    if (!A & !D){\n        lr = 0;\n    }\n    \n    //Rotate Right and Left\n    if (arrow_right) {\n        rot = -1;\n    }\n    \n    if (arrow_left) {\n        rot = 1;\n    }\n    \n    if (!arrow_right & !arrow_left){\n        rot = 0;\n    }\n    \n    this.entity.translateLocal(fwd * moveMult,0,lr * moveMult);\n    this.entity.rotateLocal(0,rot,0);\n};\n\n// swap method called for script hot-reloading\n// inherit your script state here\n// Objectcontroller.prototype.swap = function(old) { };\n\n// to learn more about script anatomy, please read:\n// http://developer.playcanvas.com/en/user-manual/scripting/\n\n","// charactercontroller.js\nvar Charactercontroller = pc.createScript('charactercontroller');\nvar hasBlueKey = false;\nvar hasYellowKey = false;\nvar hasRedKey = false;\n\nvar playerHealth = 100;\nvar playerEnergy = 100;\n\nvar deathSoundPlayed = false;\n\nvar walking = false;\n\nCharactercontroller.attributes.add('moveMult', {\n    type: 'number',\n    default: 1\n});\n\nCharactercontroller.attributes.add('camera', {\n    type: \"entity\",\n    default: null\n});\n\nCharactercontroller.attributes.add('actionText', {type:'entity'});\n\nCharactercontroller.attributes.add(\"UIV2_Energy\", {type: 'entity'});\nCharactercontroller.attributes.add(\"UIV2_Health\", {type: 'entity'});\nCharactercontroller.attributes.add(\"EnergyText\", {type: 'entity'});\nCharactercontroller.attributes.add(\"HealthText\", {type: 'entity'});\nCharactercontroller.attributes.add(\"DamageOverlay\", {type: 'entity'});\nCharactercontroller.attributes.add(\"DeathObjects\", {type:'entity'});\n\nCharactercontroller.attributes.add('EnergyBars', { type: 'asset', assetType: 'texture', array: true });\nCharactercontroller.attributes.add('HealthBars', { type: 'asset', assetType: 'texture', array: true });\nCharactercontroller.attributes.add(\"DEATHSCREEN\", {type:'entity'});\n\nvar fwd = 0;\nvar lr = 0;\nvar rot = 0;\nvar force = new pc.Vec3();\n\n// initialize code called once per entity\nCharactercontroller.prototype.initialize = function() {\n    var forwardForce = this.entity.right.clone();\n    var rightForce = this.entity.forward.clone();\n    var forward = this.camera.forward;\n    var right = this.camera.right;\n    this.eulers = new pc.Vec3();\n    \n    //Regenerate energy if it's low\n    var eneradd = setInterval(function(){ \n        if (playerEnergy < 100){\n            playerEnergy++;\n        }\n    }, 250);\n    \n    //Regenerate health if it's low\n    var healthadd = setInterval(function(){ \n        if (playerHealth < 100 && playerHealth >= 1){\n            playerHealth += 2;\n        }\n    }, 1000);\n};\n\n// update code called every frame\nCharactercontroller.prototype.update = function(dt) {\n    \n    //If the player is alive, update everything\n    if (playerHealth > 0){\n        Charactercontroller.prototype.handleMovement(this);\n        Charactercontroller.prototype.handleWeapons(this);\n        var rottest = this.app.root.findByName(\"playerLaserBeamAssist\");\n        rottest.setRotation(this.app.root.findByName(\"Character\").getRotation());\n    }\n    \n    //Update UI\n    Charactercontroller.prototype.handleUI_Display(this);\n    \n    //What to do if you are dead\n    if (playerHealth <= 0){\n        //Set collider type to box and allow rotation so that the player can be knocked around like a ragdoll\n        this.entity.collision.type = \"box\";\n        this.entity.rigidbody.angularFactor = new pc.Vec3(1,1,1);\n        \n        //Play death sound effect and do one time death actions\n        if (!deathSoundPlayed){\n            deathSoundPlayed = true;\n            this.entity.sound.play(\"Death\");\n            this.entity.sound.stop(\"Music\");\n            this.DeathObjects.enabled = true;\n        }\n        \n        //Change scene to game over screen when the spacebar is pressed\n        if(this.app.keyboard.wasPressed(pc.KEY_SPACE)){\n            SceneManager.prototype.ChangeScene(this.DEATHSCREEN);\n        }\n    }\n};\n\nfunction reduceSpeed(object){\n    //Slow down linear velocity when no input\n    if (!W & !S & !A & !D){\n        slowforce = new pc.Vec3();\n        slowforce.set(-(object.rigidbody.linearVelocity.x),0,-(object.rigidbody.linearVelocity.z)).normalize().scale(5);\n        object.rigidbody.applyForce(slowforce);\n        \n        //Stop movement when under threshold\n        if (object.rigidbody.linearVelocity.x < 0.5 && object.rigidbody.linearVelocity.x > -0.5){\n            object.rigidbody.linearVelocity = new pc.Vec3(0, object.rigidbody.linearVelocity.y, object.rigidbody.linearVelocity.z);\n        }\n        if (object.rigidbody.linearVelocity.z < 0.5 && object.rigidbody.linearVelocity.z > -0.5){\n            object.rigidbody.linearVelocity = new pc.Vec3(object.rigidbody.linearVelocity.x, object.rigidbody.linearVelocity.y, 0);\n        }\n    }\n    //Slow down angular velocity while no input\n    if (!arrow_right & !arrow_left){\n        slowtorque = new pc.Vec3();\n        slowtorque.set(0, -(object.rigidbody.angularVelocity.y),0).normalize().scale(1);\n        object.rigidbody.applyTorque(slowtorque);\n\n        if (object.rigidbody.angularVelocity.y < 0.5 && object.rigidbody.angularVelocity.y > -0.5){\n            object.rigidbody.angularVelocity = new pc.Vec3(0,0,0);\n        }\n    }\n}\n\nCharactercontroller.prototype.handleMovement = function(entity){\n\n    //Update Input\n    W = entity.app.keyboard.isPressed(pc.KEY_W);\n    A = entity.app.keyboard.isPressed(pc.KEY_A);\n    S = entity.app.keyboard.isPressed(pc.KEY_S);\n    D = entity.app.keyboard.isPressed(pc.KEY_D);\n    \n    arrow_right = entity.app.keyboard.isPressed(pc.KEY_RIGHT);\n    arrow_left = entity.app.keyboard.isPressed(pc.KEY_LEFT);\n    \n    //Move Forward and Backward\n    if (W) {\n        forwardForce = entity.entity.right.clone().scale(2 * moveMult);\n    }\n    \n    if (S) {\n        forwardForce = entity.entity.right.clone().scale(-2 * moveMult);\n    }\n    \n    if (!W & !S){\n        forwardForce = entity.entity.right.clone().scale(0);\n    }\n    \n    //Strafe Left and Right\n    if (D){\n        rightForce = entity.entity.forward.clone().scale(-2 * moveMult);\n    }\n    \n    if (A) {\n        rightForce = entity.entity.forward.clone().scale(2 * moveMult);\n    }\n    \n    if (!A & !D){\n        rightForce = entity.entity.forward.clone().scale(0);\n    }\n    \n    //Rotate Right and Left\n    if (arrow_right) {\n        entity.entity.rigidbody.applyTorque(0, -3, 0);\n    }\n    \n    if (arrow_left) {\n        entity.entity.rigidbody.applyTorque(0, 3, 0);\n    }\n    \n    entity.entity.rigidbody.applyForce(forwardForce);\n    entity.entity.rigidbody.applyForce(rightForce);\n    \n    reduceSpeed(entity.entity);\n    \n    if (entity.entity.rigidbody.linearVelocity > 0){\n        entity.entity.sound.play(\"Walk\");\n    } else {\n        entity.entity.sound.stop(\"Walk\");\n    }\n};\n\nCharactercontroller.prototype.handleUI_Display = function(entity){\n    //Update Health Display\n    //The display will always have three digits\n    if (playerHealth == 100){\n        entity.HealthText.element.text = \"Health: 100%\";\n    } else if (playerHealth >= 10 && playerHealth < 100){\n        entity.HealthText.element.text = \"Health: 0\"+playerHealth.toString()+\"%\";\n    } else if (playerHealth < 9){\n        entity.HealthText.element.text = \"Health: 00\"+playerHealth.toString()+\"%\";\n    }\n    \n    //Update Energy Display\n    //The display will always have three digits\n    if (playerEnergy == 100){\n        entity.EnergyText.element.text = \"Energy: 100%\";\n    } else if (playerEnergy >= 10 && playerEnergy < 100){\n        entity.EnergyText.element.text = \"Energy: 0\"+playerEnergy.toString()+\"%\";\n    } else if (playerEnergy < 9){\n        entity.EnergyText.element.text = \"Energy: 00\"+playerEnergy.toString()+\"%\";\n    }\n    \n    //Health Bars\n    if (playerHealth > 90 && playerHealth <= 100) {entity.UIV2_Health.element.texture = entity.HealthBars[5].resource;}\n    else if (playerHealth > 75 && playerHealth < 89) {entity.UIV2_Health.element.texture = entity.HealthBars[4].resource;}\n    else if (playerHealth > 50 && playerHealth < 74) {entity.UIV2_Health.element.texture = entity.HealthBars[3].resource;}\n    else if (playerHealth > 35 && playerHealth < 49) {entity.UIV2_Health.element.texture = entity.HealthBars[2].resource;}\n    else if (playerHealth > 10 && playerHealth < 34) {entity.UIV2_Health.element.texture = entity.HealthBars[1].resource;}\n    else if (playerHealth > 1 && playerHealth < 9) {entity.UIV2_Health.element.texture = entity.HealthBars[0].resource;}\n    \n    //Energy Bars\n    if (playerEnergy > 90 && playerEnergy <= 100) {entity.UIV2_Energy.element.texture = entity.EnergyBars[5].resource;}\n    else if (playerEnergy > 75 && playerEnergy < 89) {entity.UIV2_Energy.element.texture = entity.EnergyBars[4].resource;}\n    else if (playerEnergy > 50 && playerEnergy < 74) {entity.UIV2_Energy.element.texture = entity.EnergyBars[3].resource;}\n    else if (playerEnergy > 35 && playerEnergy < 49) {entity.UIV2_Energy.element.texture = entity.EnergyBars[2].resource;}\n    else if (playerEnergy > 10 && playerEnergy < 34) {entity.UIV2_Energy.element.texture = entity.EnergyBars[1].resource;}\n    else if (playerEnergy > 1 && playerEnergy < 9) {entity.UIV2_Energy.element.texture = entity.EnergyBars[0].resource;}\n    \n    //Debug remove and add energy and health\n    if (entity.app.keyboard.isPressed(pc.KEY_F) && entity.app.keyboard.isPressed(pc.KEY_SHIFT) && entity.app.keyboard.isPressed(pc.KEY_ALT)){\n        playerHealth -= 1;\n        playerEnergy -= 1;\n    }\n    if (entity.app.keyboard.isPressed(pc.KEY_G) && entity.app.keyboard.isPressed(pc.KEY_SHIFT) && entity.app.keyboard.isPressed(pc.KEY_ALT)){\n        playerHealth += 1;\n        playerEnergy += 1;\n    }\n    \n    //Make sure energy and health is between 0 and 100\n    if (playerEnergy > 100){playerEnergy = 100;}\n    if (playerHealth > 100){playerHealth = 100;}\n    if (playerEnergy < 0){playerEnergy = 0;}\n    if (playerHealth < 0){playerHealth = 0;}\n    \n    //Set damage overlay transparency\n    entity.DamageOverlay.element.opacity = -((playerHealth - 100) / 100);\n};\n\nCharactercontroller.prototype.handleWeapons = function(thisentity){\n    if (thisentity.app.keyboard.wasReleased(pc.KEY_SHIFT) && playerEnergy >= 5){\n        \n        thisentity.entity.sound.slot(\"Shoot\").pitch = pc.math.random(0.75,1.25);\n        thisentity.entity.sound.play(\"Shoot\");\n        \n        var bullet = thisentity.entity.findByName(\"playerLaserBeam\");\n        var newBullet = bullet.clone();\n        thisentity.entity.findByName(\"Aimassist\").addChild(newBullet);\n        newBullet.setLocalPosition(thisentity.entity.findByName(\"playerLaserBeamAssist\").getPosition());\n        newBullet.setLocalRotation(thisentity.entity.findByName(\"playerLaserBeamAssist\").getRotation());\n        newBullet.reparent(thisentity.app.root);\n        newBullet.tags.add(\"projectile\");\n        newBullet.script.enabled = true;\n        newBullet.enabled = true;\n        \n        playerEnergy -= 5;\n    }\n};\n\n","// Blue_doorTrigger.js\nvar blue_DoorTrigger = pc.createScript('blue_doorTrigger');\nvar b_active = false;\nvar b_open = false;\nvar b_intransit = false;\nvar b_timing = true;\nvar b_colliding = false;\nvar b_collidedPlayerController = null;\n\nblue_DoorTrigger.attributes.add('blue_DoorToManage', {type: 'entity'});\nblue_DoorTrigger.attributes.add('blue_DoorOpenPoint', {type: 'entity'});\nblue_DoorTrigger.attributes.add(\"blue_DoorOrigin\", {type: 'entity'});\nblue_DoorTrigger.attributes.add(\"blue_Player\", {type: 'entity'});\n\n// initialize code called once per entity\nblue_DoorTrigger.prototype.initialize = function() {\n    this.entity.collision.on('triggerenter', this.onblue_DoorTriggerEnter, this);\n    this.entity.collision.on('triggerleave', this.onblue_DoorTriggerExit, this);\n};\n\nblue_DoorTrigger.prototype.update = function() {\n    //If the E Key is pressed\n    this.app.keyboard.on(pc.EVENT_KEYUP, this.onKeyUp, this);\n    \n    //If the blue_Door is in transit\n    //If the blue_Door is b_open\n    if (hasBlueKey){\n        if (!b_open &&b_intransit) {this.blue_DoorToManage.translate(0,0.01,0);}\n\n        if (!b_open &&b_intransit && this.blue_DoorToManage.getPosition().y >= this.blue_DoorOpenPoint.getPosition().y){\n           b_intransit = false;\n            b_open = !b_open;\n            b_timing = true;\n        }\n\n        //If the blue_Door is closed\n        if (b_open &&b_intransit) {this.blue_DoorToManage.translate(0,-0.01,0);}\n\n        if (b_open &&b_intransit && this.blue_DoorToManage.getPosition().y <= this.blue_DoorOrigin.getPosition().y){\n           b_intransit = false;\n            b_open = !b_open;\n        }\n        //If some asshole left the blue_Door b_open\n        if (b_timing && b_open){\n            var x = setTimeout(function(){\n               b_intransit = true;\n                b_timing = false; \n            }, 2000);\n        }\n\n        if (b_collidedPlayerController !== null){\n            if (b_active && !b_intransit){b_collidedPlayerController.messageBox.enabled = true;}\n            else if (b_active &&b_intransit){b_collidedPlayerController.messageBox.enabled = false;}\n            else if (!b_active){b_collidedPlayerController.messageBox.enabled = false;}\n        }\n    }\n};\n\nblue_DoorTrigger.prototype.onblue_DoorTriggerEnter = function(entity) {\n    if (entity.tags.has('player') && !b_intransit && !b_open){\n        \n        /*\n        b_collidedPlayerController = entity.script.get('charactercontroller');\n        b_collidedPlayerController.messageBox.enabled = true;\n        */\n        if (hasBlueKey){\n            var cc = this.blue_Player.script.get('charactercontroller');\n            cc.actionText.element.text = \"PRESS E TO OPEN THE DOOR\";\n        }\n        \n        b_active = true;\n    }\n};\n\nblue_DoorTrigger.prototype.onblue_DoorTriggerExit = function(entity) {\n    if (b_active){\n        \n        //b_collidedPlayerController.messageBox.enabled = false;\n        \n        b_active = false;\n        \n        var cc = this.blue_Player.script.get('charactercontroller');\n        cc.actionText.element.text = \"\";\n    }\n};\n\nblue_DoorTrigger.prototype.onKeyUp = function (event) {\n    if (b_active){\n        if (hasBlueKey){\n            if (b_active && event.key == pc.KEY_E && !b_intransit){\n                //The blue_Door is now moving\n                b_intransit = true;\n                var cc = this.blue_Player.script.get('charactercontroller');\n                cc.actionText.element.text = \"OPENED THE BLUE DOOR WITH THE BLUE KEY\";\n                this.entity.sound.play(\"Door Open\");\n                this.entity.sound.play(\"Door Allow\");\n            }\n        } else if (b_active && event.key == pc.KEY_E && !b_intransit){\n            var cc = this.blue_Player.script.get('charactercontroller');\n            cc.actionText.element.text = \"A BLUE KEY IS REQUIRED TO OPEN THIS DOOR\";\n            this.entity.sound.play(\"Door Deny\");\n        }\n    }\n};\n\n","// JUNCTION_MANAGER.js\n/*\nThe red cone represents the backward collider\nThe green cone represents the forward collider\n*/\n\nvar JunctionManager = pc.createScript('junctionManager');\n\n//Junction Switches\nvar BWD_SECTOR_ACTIVE = true;           //Previous sector is active\nvar FWD_SECTOR_ACTIVE = false;          //Next setor is inactive\nvar BWD_COLLIDER_ACTIVE = false;        //Player is coming into contact with the previous sector's collider\nvar FWD_COLLIDER_ACTIVE = false;        //Player is coming into contcat with the next sector's collider\nvar LAST_COLLIDER_ACTIVE = \"not set\";          //Stores the last active collider\n\nJunctionManager.attributes.add(\"FWD_COLLIDER\", {type:\"entity\"});\nJunctionManager.attributes.add(\"BWD_COLLIDER\", {type:\"entity\"});\nJunctionManager.attributes.add(\"FWD_SECTOR_A\", {type:\"entity\"});\nJunctionManager.attributes.add(\"BWD_SECTOR_A\", {type:\"entity\"});\nJunctionManager.attributes.add(\"FWD_SECTOR_B\", {type:\"entity\"});\nJunctionManager.attributes.add(\"BWD_SECTOR_B\", {type:\"entity\"});\nJunctionManager.attributes.add(\"FWD_SECTOR_C\", {type:\"entity\"});\nJunctionManager.attributes.add(\"BWD_SECTOR_C\", {type:\"entity\"});\n\n// initialize code called once per entity\nJunctionManager.prototype.initialize = function() {\n    this.FWD_COLLIDER.collision.on('triggerenter', this.on_FWD_COLLIDER_Enter,this);\n    this.FWD_COLLIDER.collision.on('triggerleave', this.on_FWD_COLLIDER_Exit,this);\n    this.BWD_COLLIDER.collision.on('triggerenter', this.on_BWD_COLLIDER_Enter,this);\n    this.BWD_COLLIDER.collision.on('triggerleave', this.on_BWD_COLLIDER_Exit,this);\n};\n\n// update code called every frame\nJunctionManager.prototype.update = function(dt) {\n    /*\n    Logic To-Do List (+=done,-=not done yet)\n    \n    +Only run code if the collider is active\n    \n    -To Enable The Next Junction:\n    -1. The last collider active must be the forward collider\n    -2. The backward collider must be inactive\n    \n    -To Enable The Previous Junction:\n    -1. The last collider active must be the backward collider\n    -2. The forward collider must be inactive\n    \n    +The last collider active will be set once another collider is enabled or the current one is disabled\n        Located in XXX_COLLIDER_ENTER/XXX_COLLIDER_EXIT\n    */\n    \n    \n    if (LAST_COLLIDER_ACTIVE != \"not set\"){\n        if (LAST_COLLIDER_ACTIVE == \"FWD\"){\n            FWD_SECTOR_ACTIVE = true;\n            BWD_SECTOR_ACTIVE = false;\n            this.FWD_SECTOR_A.enabled = true;\n            this.FWD_SECTOR_B.enabled = true;\n            this.FWD_SECTOR_C.enabled = true;\n            this.BWD_SECTOR_A.enabled = false;\n            this.BWD_SECTOR_B.enabled = false;\n            this.BWD_SECTOR_C.enabled = false;\n            \n            console.log(\"[JunctionManager_001] Enabling \"+(this.FWD_SECTOR_A.name).toString()+\", \"+(this.FWD_SECTOR_B.name).toString()+\" and \"+(this.FWD_SECTOR_C.name).toString());\n            console.log(\"[JunctionManager_001] Disabling \"+(this.BWD_SECTOR_A.name).toString()+\", \"+(this.BWD_SECTOR_B.name).toString()+\" and \"+(this.BWD_SECTOR_C.name).toString());\n            \n            LAST_COLLIDER_ACTIVE = \"not set\";\n        }\n        if (LAST_COLLIDER_ACTIVE == \"BWD\"){\n            FWD_SECTOR_ACTIVE = false;\n            BWD_SECTOR_ACTIVE = true;\n            this.FWD_SECTOR_A.enabled = false;\n            this.FWD_SECTOR_B.enabled = false;\n            this.FWD_SECTOR_C.enabled = false;\n            this.BWD_SECTOR_A.enabled = true;\n            this.BWD_SECTOR_B.enabled = true;\n            this.BWD_SECTOR_C.enabled = true;\n            \n            console.log(\"[JunctionManager_001] Disabling \"+(this.FWD_SECTOR_A.name).toString()+\", \"+(this.FWD_SECTOR_B.name).toString()+\" and \"+(this.FWD_SECTOR_C.name).toString());\n            console.log(\"[JunctionManager_001] Enabling \"+(this.BWD_SECTOR_A.name).toString()+\", \"+(this.BWD_SECTOR_B.name).toString()+\" and \"+(this.BWD_SECTOR_C.name).toString());\n            \n            LAST_COLLIDER_ACTIVE = \"not set\";\n        }\n    }\n};\n\n//If the character collides with the forward collider\nJunctionManager.prototype.on_FWD_COLLIDER_Enter = function(entity){\n    if (entity.name == \"Character\"){\n        FWD_COLLIDER_ACTIVE = true;\n\n    console.log(\"Entered FWD Collider\");\n    }\n};\n\n//If the character leaves the forward collider\nJunctionManager.prototype.on_FWD_COLLIDER_Exit = function(entity){\n    if (entity.name == \"Character\"){\n        FWD_COLLIDER_ACTIVE = false;\n        \n        console.log(\"Left FWD Collider\");\n\n        //If the player left this collider and the other one hasn't been triggered\n        if (!FWD_COLLIDER_ACTIVE && !BWD_COLLIDER_ACTIVE){\n            LAST_COLLIDER_ACTIVE = \"FWD\";\n        }\n    }\n};\n\n//If the character enters the backward collider\nJunctionManager.prototype.on_BWD_COLLIDER_Enter = function(entity){\n    if (entity.name == \"Character\"){\n        BWD_COLLIDER_ACTIVE = true;\n        \n    console.log(\"Entered BWD Collider\");\n    }\n};\n\n//If the character leaves the backward collider\nJunctionManager.prototype.on_BWD_COLLIDER_Exit = function(entity){\n    if (entity.name == \"Character\"){\n        BWD_COLLIDER_ACTIVE = false;\n        \n        console.log(\"Left BWD Collider\");\n\n        //If the player left this collider and the other one hasn't been triggered\n        if (!FWD_COLLIDER_ACTIVE && !BWD_COLLIDER_ACTIVE){\n            LAST_COLLIDER_ACTIVE = \"BWD\";\n        }\n    }\n};\n\n","// JUNCTION_MANAGER_002.js\n/*\nThe red cone represents the backward collider\nThe green cone represents the forward collider\n*/\n\nvar JunctionManager_002 = pc.createScript('JunctionManager_002');\n\n//Junction Switches\nvar _2_BWD_SECTOR_ACTIVE = true;           //Previous sector is active\nvar _2_FWD_SECTOR_ACTIVE = false;          //Next setor is inactive\nvar _2_BWD_COLLIDER_ACTIVE = false;        //Player is coming into contact with the previous sector's collider\nvar _2_FWD_COLLIDER_ACTIVE = false;        //Player is coming into contcat with the next sector's collider\nvar _2_LAST_COLLIDER_ACTIVE = \"not set\";          //Stores the last active collider\n\nJunctionManager_002.attributes.add(\"_2_FWD_COLLIDER\", {type:\"entity\"});\nJunctionManager_002.attributes.add(\"_2_BWD_COLLIDER\", {type:\"entity\"});\nJunctionManager_002.attributes.add(\"_2_FWD_SECTOR_A\", {type:\"entity\"});\nJunctionManager_002.attributes.add(\"_2_BWD_SECTOR_A\", {type:\"entity\"});\nJunctionManager_002.attributes.add(\"_2_FWD_SECTOR_B\", {type:\"entity\"});\nJunctionManager_002.attributes.add(\"_2_BWD_SECTOR_B\", {type:\"entity\"});\nJunctionManager_002.attributes.add(\"_2_FWD_SECTOR_C\", {type:\"entity\"});\nJunctionManager_002.attributes.add(\"_2_BWD_SECTOR_C\", {type:\"entity\"});\n\n// initialize code called once per entity\nJunctionManager_002.prototype.initialize = function() {\n    this._2_FWD_COLLIDER.collision.on('triggerenter', this.on__2_FWD_COLLIDER_Enter,this);\n    this._2_FWD_COLLIDER.collision.on('triggerleave', this.on__2_FWD_COLLIDER_Exit,this);\n    this._2_BWD_COLLIDER.collision.on('triggerenter', this.on__2_BWD_COLLIDER_Enter,this);\n    this._2_BWD_COLLIDER.collision.on('triggerleave', this.on__2_BWD_COLLIDER_Exit,this);\n};\n\n// update code called every frame\nJunctionManager_002.prototype.update = function(dt) {\n    /*\n    Logic To-Do List (+=done,-=not done yet)\n    \n    +Only run code if the collider is active\n    \n    -To Enable The Next Junction:\n    -1. The last collider active must be the forward collider\n    -2. The backward collider must be inactive\n    \n    -To Enable The Previous Junction:\n    -1. The last collider active must be the backward collider\n    -2. The forward collider must be inactive\n    \n    +The last collider active will be set once another collider is enabled or the current one is disabled\n        Located in XXX_COLLIDER_ENTER/XXX_COLLIDER_EXIT\n    */\n    \n    \n    if (_2_LAST_COLLIDER_ACTIVE != \"not set\"){\n        if (_2_LAST_COLLIDER_ACTIVE == \"FWD\"){\n            _2_FWD_SECTOR_ACTIVE = true;\n            _2_BWD_SECTOR_ACTIVE = false;\n            this._2_FWD_SECTOR_A.enabled = true;\n            this._2_FWD_SECTOR_B.enabled = true;\n            this._2_FWD_SECTOR_C.enabled = true;\n            this._2_BWD_SECTOR_A.enabled = false;\n            this._2_BWD_SECTOR_B.enabled = false;\n            this._2_BWD_SECTOR_C.enabled = false;\n            \n            console.log(\"[JunctionManager_002] Enabling \"+(this._2_FWD_SECTOR_A.name).toString()+\", \"+(this._2_FWD_SECTOR_B.name).toString()+\" and \"+(this._2_FWD_SECTOR_C.name).toString());\n            console.log(\"[JunctionManager_002] Disabling \"+(this._2_BWD_SECTOR_A.name).toString()+\", \"+(this._2_BWD_SECTOR_B.name).toString()+\" and \"+(this._2_BWD_SECTOR_C.name).toString());\n            \n            _2_LAST_COLLIDER_ACTIVE = \"not set\";\n        }\n        if (_2_LAST_COLLIDER_ACTIVE == \"BWD\"){\n            _2_FWD_SECTOR_ACTIVE = false;\n            _2_BWD_SECTOR_ACTIVE = true;\n            this._2_FWD_SECTOR_A.enabled = false;\n            this._2_FWD_SECTOR_B.enabled = false;\n            this._2_FWD_SECTOR_C.enabled = false;\n            this._2_BWD_SECTOR_A.enabled = true;\n            this._2_BWD_SECTOR_B.enabled = true;\n            this._2_BWD_SECTOR_C.enabled = true;\n            \n            console.log(\"[JunctionManager_002] Disabling \"+(this._2_FWD_SECTOR_A.name).toString()+\", \"+(this._2_FWD_SECTOR_B.name).toString()+\" and \"+(this._2_FWD_SECTOR_C.name).toString());\n            console.log(\"[JunctionManager_002] Enabling \"+(this._2_BWD_SECTOR_A.name).toString()+\", \"+(this._2_BWD_SECTOR_B.name).toString()+\" and \"+(this._2_BWD_SECTOR_C.name).toString());\n            \n            _2_LAST_COLLIDER_ACTIVE = \"not set\";\n        }\n    }\n};\n\n//If the character collides with the forward collider\nJunctionManager_002.prototype.on__2_FWD_COLLIDER_Enter = function(entity){\n    _2_FWD_COLLIDER_ACTIVE = true;\n    console.log(\"Entered FWD Collider\");\n};\n\n//If the character leaves the forward collider\nJunctionManager_002.prototype.on__2_FWD_COLLIDER_Exit = function(entity){\n    _2_FWD_COLLIDER_ACTIVE = false;\n    console.log(\"Left FWD Collider\");\n    \n    //If the player left this collider and the other one hasn't been triggered\n    if (!_2_FWD_COLLIDER_ACTIVE && !_2_BWD_COLLIDER_ACTIVE){\n        _2_LAST_COLLIDER_ACTIVE = \"FWD\";\n    }\n};\n\n//If the character enters the backward collider\nJunctionManager_002.prototype.on__2_BWD_COLLIDER_Enter = function(entity){\n    _2_BWD_COLLIDER_ACTIVE = true;\n    console.log(\"Entered BWD Collider\");\n};\n\n//If the character leaves the backward collider\nJunctionManager_002.prototype.on__2_BWD_COLLIDER_Exit = function(entity){\n    _2_BWD_COLLIDER_ACTIVE = false;\n    console.log(\"Left BWD Collider\");\n    \n    //If the player left this collider and the other one hasn't been triggered\n    if (!_2_FWD_COLLIDER_ACTIVE && !_2_BWD_COLLIDER_ACTIVE){\n        _2_LAST_COLLIDER_ACTIVE = \"BWD\";\n    }\n};\n\n","// JUNCTION_MANAGER_003.js\n/*\nThe red cone represents the backward collider\nThe green cone represents the forward collider\n*/\n\nvar JunctionManager_003 = pc.createScript('JunctionManager_003');\n\n//Junction Switches\nvar _3_BWD_SECTOR_ACTIVE = true;           //Previous sector is active\nvar _3_FWD_SECTOR_ACTIVE = false;          //Next setor is inactive\nvar _3_BWD_COLLIDER_ACTIVE = false;        //Player is coming into contact with the previous sector's collider\nvar _3_FWD_COLLIDER_ACTIVE = false;        //Player is coming into contcat with the next sector's collider\nvar _3_LAST_COLLIDER_ACTIVE = \"not set\";          //Stores the last active collider\n\nJunctionManager_003.attributes.add(\"_3_FWD_COLLIDER\", {type:\"entity\"});\nJunctionManager_003.attributes.add(\"_3_BWD_COLLIDER\", {type:\"entity\"});\nJunctionManager_003.attributes.add(\"_3_FWD_SECTOR_A\", {type:\"entity\"});\nJunctionManager_003.attributes.add(\"_3_BWD_SECTOR_A\", {type:\"entity\"});\nJunctionManager_003.attributes.add(\"_3_FWD_SECTOR_B\", {type:\"entity\"});\nJunctionManager_003.attributes.add(\"_3_BWD_SECTOR_B\", {type:\"entity\"});\nJunctionManager_003.attributes.add(\"_3_FWD_SECTOR_C\", {type:\"entity\"});\nJunctionManager_003.attributes.add(\"_3_BWD_SECTOR_C\", {type:\"entity\"});\n\n// initialize code called once per entity\nJunctionManager_003.prototype.initialize = function() {\n    this._3_FWD_COLLIDER.collision.on('triggerenter', this.on__3_FWD_COLLIDER_Enter,this);\n    this._3_FWD_COLLIDER.collision.on('triggerleave', this.on__3_FWD_COLLIDER_Exit,this);\n    this._3_BWD_COLLIDER.collision.on('triggerenter', this.on__3_BWD_COLLIDER_Enter,this);\n    this._3_BWD_COLLIDER.collision.on('triggerleave', this.on__3_BWD_COLLIDER_Exit,this);\n};\n\n// update code called every frame\nJunctionManager_003.prototype.update = function(dt) {\n    /*\n    Logic To-Do List (+=done,-=not done yet)\n    \n    +Only run code if the collider is active\n    \n    -To Enable The Next Junction:\n    -1. The last collider active must be the forward collider\n    -2. The backward collider must be inactive\n    \n    -To Enable The Previous Junction:\n    -1. The last collider active must be the backward collider\n    -2. The forward collider must be inactive\n    \n    +The last collider active will be set once another collider is enabled or the current one is disabled\n        Located in XXX_COLLIDER_ENTER/XXX_COLLIDER_EXIT\n    */\n    \n    \n    if (_3_LAST_COLLIDER_ACTIVE != \"not set\"){\n        if (_3_LAST_COLLIDER_ACTIVE == \"FWD\"){\n            _3_FWD_SECTOR_ACTIVE = true;\n            _3_BWD_SECTOR_ACTIVE = false;\n            this._3_FWD_SECTOR_A.enabled = true;\n            this._3_FWD_SECTOR_B.enabled = true;\n            this._3_FWD_SECTOR_C.enabled = true;\n            this._3_BWD_SECTOR_A.enabled = false;\n            this._3_BWD_SECTOR_B.enabled = false;\n            this._3_BWD_SECTOR_C.enabled = false;\n            \n            console.log(\"[JunctionManager_003] Enabling \"+(this._3_FWD_SECTOR_A.name).toString()+\", \"+(this._3_FWD_SECTOR_B.name).toString()+\" and \"+(this._3_FWD_SECTOR_C.name).toString());\n            console.log(\"[JunctionManager_003] Disabling \"+(this._3_BWD_SECTOR_A.name).toString()+\", \"+(this._3_BWD_SECTOR_B.name).toString()+\" and \"+(this._3_BWD_SECTOR_C.name).toString());\n            \n            _3_LAST_COLLIDER_ACTIVE = \"not set\";\n        }\n        if (_3_LAST_COLLIDER_ACTIVE == \"BWD\"){\n            _3_FWD_SECTOR_ACTIVE = false;\n            _3_BWD_SECTOR_ACTIVE = true;\n            this._3_FWD_SECTOR_A.enabled = false;\n            this._3_FWD_SECTOR_B.enabled = false;\n            this._3_FWD_SECTOR_C.enabled = false;\n            this._3_BWD_SECTOR_A.enabled = true;\n            this._3_BWD_SECTOR_B.enabled = true;\n            this._3_BWD_SECTOR_C.enabled = true;\n            \n            console.log(\"[JunctionManager_003] Disabling \"+(this._3_FWD_SECTOR_A.name).toString()+\", \"+(this._3_FWD_SECTOR_B.name).toString()+\" and \"+(this._3_FWD_SECTOR_C.name).toString());\n            console.log(\"[JunctionManager_003] Enabling \"+(this._3_BWD_SECTOR_A.name).toString()+\", \"+(this._3_BWD_SECTOR_B.name).toString()+\" and \"+(this._3_BWD_SECTOR_C.name).toString());\n            \n            _3_LAST_COLLIDER_ACTIVE = \"not set\";\n        }\n    }\n};\n\n//If the character collides with the forward collider\nJunctionManager_003.prototype.on__3_FWD_COLLIDER_Enter = function(entity){\n    _3_FWD_COLLIDER_ACTIVE = true;\n    console.log(\"Entered FWD Collider\");\n};\n\n//If the character leaves the forward collider\nJunctionManager_003.prototype.on__3_FWD_COLLIDER_Exit = function(entity){\n    _3_FWD_COLLIDER_ACTIVE = false;\n    console.log(\"Left FWD Collider\");\n    \n    //If the player left this collider and the other one hasn't been triggered\n    if (!_3_FWD_COLLIDER_ACTIVE && !_3_BWD_COLLIDER_ACTIVE){\n        _3_LAST_COLLIDER_ACTIVE = \"FWD\";\n    }\n};\n\n//If the character enters the backward collider\nJunctionManager_003.prototype.on__3_BWD_COLLIDER_Enter = function(entity){\n    _3_BWD_COLLIDER_ACTIVE = true;\n    console.log(\"Entered BWD Collider\");\n};\n\n//If the character leaves the backward collider\nJunctionManager_003.prototype.on__3_BWD_COLLIDER_Exit = function(entity){\n    _3_BWD_COLLIDER_ACTIVE = false;\n    console.log(\"Left BWD Collider\");\n    \n    //If the player left this collider and the other one hasn't been triggered\n    if (!_3_FWD_COLLIDER_ACTIVE && !_3_BWD_COLLIDER_ACTIVE){\n        _3_LAST_COLLIDER_ACTIVE = \"BWD\";\n    }\n};\n\n","// blue_keyPickup.js\nvar BlueKeyPickup = pc.createScript('blueKeyPickup');\n\nBlueKeyPickup.attributes.add(\"blue_Player\", {type: 'entity'});\nBlueKeyPickup.attributes.add(\"blue_UI\", {type: 'entity'});\n\n// initialize code called once per entity\nBlueKeyPickup.prototype.initialize = function() {\n    this.entity.collision.on('triggerenter', this.onKeyPickupTriggerEnter, this);\n};\n\nBlueKeyPickup.prototype.update = function() {\n    this.entity.rotate(0,10,0);\n};\n\nBlueKeyPickup.prototype.onKeyPickupTriggerEnter = function(entity) {\n    if (entity.name == \"Character\"){\n        hasBlueKey = true;\n        var cc = this.blue_Player.script.get('charactercontroller');\n        cc.actionText.element.text = \"PICKED UP BLUE KEY\";\n        this.blue_UI.enabled = true;\n        this.entity.sound.play(\"Pickup\");\n        this.entity.destroy();\n    }\n};\n\n","// telephoneController.js\nvar TelephoneController = pc.createScript('telephoneController');\nvar levelTime = 0;\nvar timer;\nvar telephoneActive;\n\nTelephoneController.attributes.add(\"tele_Player\", {type: 'entity'});\nTelephoneController.attributes.add(\"EndScreen_Time\", {type: 'entity'});\nTelephoneController.attributes.add(\"ENDSCREEN\", {type:'entity'});\n\n// initialize code called once per entity\nTelephoneController.prototype.initialize = function() {\n    this.entity.collision.on('triggerenter', this.onTelephoneRangeEnter, this);\n    this.entity.collision.on('triggerleave', this.onTelephoneRangeExit, this);\n    \n    timer = setInterval(function(){levelTime++; }, 1000);\n};\n\nTelephoneController.prototype.update = function(){\n    if (this.app.keyboard.isPressed(pc.KEY_E) && telephoneActive){\n        console.log(\"LEVEL END\");\n        clearTimeout(timer);\n        this.EndScreen_Time.element.text = levelTime+\"s\";\n        console.log(levelTime);\n        SceneManager.prototype.ChangeScene(this.ENDSCREEN);\n    }\n};\n\nTelephoneController.prototype.onTelephoneRangeEnter = function(entity){\n    if (entity.name == \"Character\"){\n        var cc = this.tele_Player.script.get('charactercontroller');\n        cc.actionText.element.text = \"PRESS E TO PICK UP THE PHONE\";\n        telephoneActive = true;\n    }\n};\n\nTelephoneController.prototype.onTelephoneRangeExit = function(entity){\n    if (entity.name == \"Character\"){\n        var cc = this.tele_Player.script.get('charactercontroller');\n        cc.actionText.element.text = \"\";\n        telephoneActive = false;\n    }\n};\n\n\n","// SceneManager.js\nvar SceneManager = pc.createScript('sceneManager');\nvar CurrentScene = null;\nvar lastLevelCompleted = \"not set\";\nvar CurrentHelpIndex = 0;\n\n//scenes\nSceneManager.attributes.add(\"MenuScenes\", {type:\"entity\", array:true});\nSceneManager.attributes.add(\"LevelScenes\", {type:\"entity\", array:true});\nSceneManager.attributes.add(\"HelpTextures\", {type:\"asset\", assetType:\"texture\", array:true});\nSceneManager.attributes.add(\"HelpImage\", {type:\"entity\"});\nSceneManager.attributes.add(\"MenuMusicManager\", {type:\"entity\"});\n/*\nScene array \"MenuScenes\"\n\n0: Title Screen\n1: Menu Screen\n2: Play Screen\n3: Help Screen\n4: End Game Screen\n5: Play Full Game Screen\n6: Death Scene\n\nScene array \"LevelScenes\"\n\n0: Tutorial\n1: E1M1\n2: E1M2\n3: E1M3\n4: E1M4\n5: E1M5\n6: E1M6\n\n*/\n\n//Change to the title screen upon startup\nSceneManager.prototype.initialize = function(){\n    SceneManager.prototype.ChangeScene(this.MenuScenes[0]);\n};\n\n//Handle all screens that need specific actions as well as miscellaneous screens\nSceneManager.prototype.update = function(){\n    SceneManager.prototype.handleTitleStart(this);\n    SceneManager.prototype.handleButtons(this);\n    SceneManager.prototype.handleHelpMenu(this);\n    SceneManager.prototype.handleFullGameScreen(this);\n    SceneManager.prototype.handleDeathScreen(this);\n    if (CurrentScene.name == \"Level Complete\"){\n        SceneManager.prototype.handleEndgameScreen(this);\n    }\n    \n    if (this.MenuScenes.includes(CurrentScene)){\n        this.MenuMusicManager.enabled = true;\n    } else {\n        this.MenuMusicManager.enabled = false;\n    }\n};\n\n//Change to the main menu\nSceneManager.prototype.handleTitleStart = function(thisentity){\n    if (CurrentScene == thisentity.MenuScenes[0] && thisentity.app.keyboard.isPressed(pc.KEY_SPACE)){\n        SceneManager.prototype.ChangeScene(thisentity.MenuScenes[1]);\n    }\n};\n\n//Master Change scene function. Used by all scripts to change scenes in the game\nSceneManager.prototype.ChangeScene = function(destination){\n    if (CurrentScene !== null){CurrentScene.enabled = false;}\n    console.log(\"DESTINATION: \"+destination.name);\n    CurrentScene = destination;\n    console.log(\"CURRENTSCENE: \"+CurrentScene.name);\n    CurrentScene.enabled = true;\n};\n\n//Handles main menu buttons\nSceneManager.prototype.handleButtons = function(thisentity){\n    if (CurrentScene == thisentity.MenuScenes[1]){\n        if (thisentity.app.keyboard.wasReleased(pc.KEY_1)){\n            SceneManager.prototype.ChangeScene(thisentity.MenuScenes[2]);\n        } else if (thisentity.app.keyboard.wasReleased(pc.KEY_2)) {\n            SceneManager.prototype.ChangeScene(thisentity.MenuScenes[3]);\n        }\n    } else if (CurrentScene == thisentity.MenuScenes[2]){\n        if (thisentity.app.keyboard.wasReleased(pc.KEY_1)){\n            SceneManager.prototype.ChangeScene(thisentity.LevelScenes[0]);\n            lastLevelCompleted = \"tutorial\";\n        } else if (thisentity.app.keyboard.wasReleased(pc.KEY_2)) {\n            SceneManager.prototype.ChangeScene(thisentity.LevelScenes[1]);\n            lastLevelCompleted = \"E1M1\";\n        } else if (thisentity.app.keyboard.wasReleased(pc.KEY_0)) {\n            SceneManager.prototype.ChangeScene(thisentity.MenuScenes[1]);\n        }\n    } else if (CurrentScene == thisentity.MenuScenes[3]){\n        if (thisentity.app.keyboard.wasReleased(pc.KEY_0)){\n            SceneManager.prototype.ChangeScene(thisentity.MenuScenes[1]);\n        }\n    }\n};\n\n//Handles scrolling through help images in help menu\nSceneManager.prototype.handleHelpMenu = function(thisentity){\n    if (CurrentScene == thisentity.MenuScenes[3]){\n        if (thisentity.app.keyboard.wasReleased(pc.KEY_5)){\n            CurrentHelpIndex++;\n        } else if (thisentity.app.keyboard.wasReleased(pc.KEY_4)){\n            CurrentHelpIndex--;\n        }\n        if (CurrentHelpIndex > thisentity.HelpTextures.length - 1){\n            CurrentHelpIndex = 0;\n        }\n        if (CurrentHelpIndex < 0){\n            CurrentHelpIndex = thisentity.HelpTextures.length - 1;\n        }\n        SceneManager.prototype.updateHelpScreen(thisentity);\n    }\n};\n\n//Updates the image in the health screen\nSceneManager.prototype.updateHelpScreen = function(thisentity){\n    thisentity.HelpImage.element.texture = thisentity.HelpTextures[CurrentHelpIndex].resource;\n};\n\n//Dictates which screen to change to when the player beats a level\nSceneManager.prototype.handleEndgameScreen = function(thisentity){\n    if (thisentity.app.keyboard.wasPressed(pc.KEY_SPACE)){\n        if (lastLevelCompleted == \"tutorial\"){\n            console.log(\"handleEndgameScreen: returning to handleFullGameScreen:\");\n            SceneManager.prototype.ChangeScene(thisentity.MenuScenes[5]);\n        }\n        if (lastLevelCompleted == \"E1M2\"){\n            SceneManager.prototype.ChangeScene(thisentity.MenuScenes[0]);\n            //SceneManager.prototype.ChangeScene(thisentity.LevelScenes[3]);\n            lastLevelCompleted = \"E1M3\";\n        }\n        if (lastLevelCompleted == \"E1M1\"){\n            SceneManager.prototype.ChangeScene(thisentity.LevelScenes[2]);\n            lastLevelCompleted = \"E1M2\";\n        }\n    }\n};\n\n//Handles the screen shown after the tutorial\nSceneManager.prototype.handleFullGameScreen = function(thisentity){\n    if (CurrentScene == thisentity.MenuScenes[5]){\n        setTimeout(gametimout, 500);\n\n        function gametimout() {\n            if (thisentity.app.keyboard.wasPressed(pc.KEY_SPACE)){\n                console.log(\"handleFullGameScreen: returning to main menu:\");\n                SceneManager.prototype.ChangeScene(thisentity.MenuScenes[0]);\n            }\n        }\n    }\n};\n\n//Handles the screen that's shown after a player dies\nSceneManager.prototype.handleDeathScreen = function(thisentity){\n    if (CurrentScene.name == \"Death\"){\n        console.log(\"Bye bye\");\n        setTimeout(function(){\n            if (thisentity.app.keyboard.isPressed(pc.KEY_SPACE)){\n                window.location.reload();\n            }\n        }, 1000);\n    }\n};\n\n","// tutorialTextCycler.js\nvar TutorialTextCycler = pc.createScript('tutorialTextCycler');\nvar tutorialCardIndex = 0;\n\nTutorialTextCycler.attributes.add(\"TutorialCards\", {type:'entity', array:true});\n\nTutorialTextCycler.prototype.initialize = function() {\n};\n\nTutorialTextCycler.prototype.update = function(dt) {\n    TutorialTextCycler.prototype.HandleInput(this);\n    if (tutorialCardIndex >= this.TutorialCards.length){\n        this.entity.enabled = false;\n    }\n};\n\nTutorialTextCycler.prototype.HandleInput = function(thisentity){\n    if (thisentity.app.keyboard.wasPressed(pc.KEY_SPACE)){\n        tutorialCardIndex++;\n        TutorialTextCycler.prototype.UpdateCard(thisentity);\n        setTimeout(waitAndRead(thisentity), 1000);\n    }\n};\n\nTutorialTextCycler.prototype.UpdateCard = function(thisentity){\n    if (!(tutorialCardIndex - 1 < 0)){ \n        thisentity.TutorialCards[tutorialCardIndex-1].enabled = false;\n    }\n    if (!(tutorialCardIndex >= thisentity.TutorialCards.length)){\n        thisentity.TutorialCards[tutorialCardIndex].enabled = true;\n    }\n};\n\nfunction waitAndRead(thisentity){\n    if (thisentity.app.keyboard.isPressed(pc.KEY_SPACE)){\n        console.log(\"waiting minimum 1 second for the player to read this before skipping\");\n    }\n}\n\n","// enemyController.js\nvar EnemyController = pc.createScript('enemyController');\n\nEnemyController.attributes.add(\"EC_Player\", {type:'entity'});                           //The player\nEnemyController.attributes.add(\"EnemiesToManage\", {type:\"entity\", array:true});         //The enemies that are to be managed by this script\nEnemyController.attributes.add(\"EnemiesInRange\", {type:\"boolean\", array:true});         //A list updated at runtime of enemies in range of attacking and following the player\nEnemyController.attributes.add(\"EnemyHealth\", {type:\"number\", array:true});             //A list of enemy health\nEnemyController.attributes.add(\"EnemyDeathSoundPlayed\", {type:\"boolean\", array:true});  //A boolean that ensures that the enemy death sound is only played once\n\nEnemyController.prototype.initialize = function() {\n    //Set onCollision event for every enemy that's being managed\n    for (var i = 0; i < this.EnemiesToManage.length; i++){\n        this.EnemiesToManage[i].collision.on(\"collisionstart\", this.onContact, this);\n    }\n};\n\nEnemyController.prototype.update = function() {\n    //Check to see what enemies are in range\n    for (var i = 0; i < this.EnemiesToManage.length; i++){\n        //Check to see which enemies are in range of attacking the player\n        if (distanceBetween(this.EnemiesToManage[i], this.EC_Player) < 10){\n            this.EnemiesInRange[i] = true;\n        } else {\n            this.EnemiesInRange[i] = false;\n        }\n        \n        //Check to see which enemies are dead\n        if (this.EnemyHealth[i] <= 0){\n            if (this.EnemyDeathSoundPlayed[i] === false){\n                this.EnemiesToManage[i].collision.enabled = false;\n                this.EnemiesToManage[i].enabled = false;\n                this.entity.sound.play(\"Enemy 2\");\n                this.EnemyDeathSoundPlayed[i] = true;\n            }\n        }\n    }\n    \n    //Update enemies\n    EnemyController.prototype.updateActiveEnemies(this);\n    EnemyController.prototype.updateIdleEnemies(this);\n};\n\nEnemyController.prototype.updateActiveEnemies = function(enemyController){                                                //Update enemies that are active\n    for (var x = 0; x < enemyController.EnemiesInRange.length; x++){                                                      //Cycle through a list of managed enemies\n        if (enemyController.EnemiesInRange[x] === true && enemyController.EnemyHealth[x] > 0){                            //Check to see which ones are active\n            //Rotate The enemy towards the player\n            enemyController.EnemiesToManage[x].findByName(\"StingerChild\").lookAt(enemyController.EC_Player.getPosition());\n            //Move the enemy towards the player\n            enemyController.EnemiesToManage[x].rigidbody.applyImpulse(enemyController.EnemiesToManage[x].findByName(\"StingerChild\").forward.scale(0.1));\n            enemyController.checkDamage(enemyController);\n        } else {\n            //EnemyController.prototype.reduceSpeed(enemyController, enemyController.EnemiesToManage[x]);\n        }\n    }\n};\n\n//Go through a list of idle enemies and play their idle animation\nEnemyController.prototype.updateIdleEnemies = function(enemyController) {\n    for (var x = 0; x < enemyController.EnemiesToManage.length; x++){\n        if (enemyController.EnemiesInRange[x] === false && enemyController.EnemyHealth[x] > 0){\n            enemyController.EnemiesToManage[x].findByName(\"StingerChild\").rotateLocal(0,1,0);\n        }\n    }\n};\n\n//Slow down an enemy that is no longer in range of the player\nEnemyController.prototype.reduceSpeed  = function(enemyController, object) {\n    slowforce = new pc.Vec3();\n    slowforce.set(-(object.rigidbody.linearVelocity.x),0,-(object.rigidbody.linearVelocity.z)).normalize().scale(5);\n    object.rigidbody.applyForce(slowforce);\n};\n\n//Check to see if an enemy has stuck a player\nEnemyController.prototype.checkDamage = function(enemyController){\n    for (var x = 0; x < enemyController.EnemiesToManage.length; x++){\n        if (distanceBetween(enemyController.EnemiesToManage[x], enemyController.EC_Player) < 2){\n            if (enemyController.EnemyHealth[x] > 0){\n                playerHealth--;\n            }\n        }\n    }\n};\n\n//Check to see if an enemy has been damaged by a projectile\nEnemyController.prototype.onContact = function(collision){\n    console.log(collision.other.name);\n    if (collision.other.tags.has(\"projectile\")){\n        console.log(\"HAS TAG PROJECTILE\");\n        for (var x = 0; x < this.EnemiesToManage.length; x++){\n            console.log(\"Distance between\"+collision.other.name+\":\"+distanceBetween(collision.other, this.EnemiesToManage[x]));\n            if (distanceBetween(collision.other, this.EnemiesToManage[x]) < 2){\n                this.EnemyHealth[x] -= 10;\n                this.entity.sound.slot(\"Enemy 1\").pitch = pc.math.random(0.75,1.25);\n                this.entity.sound.play(\"Enemy 1\");\n            }\n        }\n    }\n};\n\n//Function to calculate distance between two objects (taken from the PlayCanvas forum)\nfunction distanceBetween(entityA, entityB) {\n    var posA = entityA.getPosition();\n    var posB = entityB.getPosition();\n\n    var dx = posB.x - posA.x;\n    var dy = posB.y - posA.y;\n    var dz = posB.z - posA.z;\n\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n\n","// rotate.js\nvar Rotate = pc.createScript('rotate');\n\nRotate.attributes.add(\"rX\", {type:\"number\"});\nRotate.attributes.add(\"rY\", {type:\"number\"});\nRotate.attributes.add(\"rZ\", {type:\"number\"});\n\nRotate.prototype.update = function(dt) {\n    //Rotate an objet by the specified values\n    this.entity.rotateLocal(this.rX,this.rY,this.rZ);\n};\n\n\n","// bulletMove.js\nvar BulletMove = pc.createScript('bulletMove');\n\n\nBulletMove.prototype.initialize = function(){\n    this.entity.collision.on(\"contact\", this.onContact, this);\n};\n\n\nBulletMove.prototype.update = function(dt) {\n    //this.entity.translate(this.entity.right.scale(0.5));\n    //this.entity.rigidbody.\n    this.entity.rigidbody.applyImpulse(this.entity.right.scale(1));\n    if (distanceBetween(this.entity, this.app.root.findByName(\"Character\")) > 50){\n        this.entity.destroy();\n    }\n};\n\nBulletMove.prototype.onContact = function(collision){\n    this.entity.enabled = false;\n    //this.entity.destroy();\n};\n\n//Function to calculate distance between two objects (taken from forum)\nfunction distanceBetween(entityA, entityB) {\n    var posA = entityA.getPosition();\n    var posB = entityB.getPosition();\n\n    var dx = posB.x - posA.x;\n    var dy = posB.y - posA.y;\n    var dz = posB.z - posA.z;\n\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n\n","// cameraMoveLoop.js\nvar CameraMoveLoop = pc.createScript('cameraMoveLoop');\n\n// update code called every frame\nCameraMoveLoop.prototype.update = function(dt) {\n    this.entity.translate(0,0,-1);\n    if (this.entity.getPosition().z <= -3300){\n        console.log(\"Greater\");\n        this.entity.setPosition(0,0,300);\n    }\n};\n\n","// red_keyPickup.js\nvar RedKeyPickup = pc.createScript('redKeyPickup');\n\nRedKeyPickup.attributes.add(\"Red_Player\", {type: 'entity'});\nRedKeyPickup.attributes.add(\"Red_UI\", {type: 'entity'});\n\n// initialize code called once per entity\nRedKeyPickup.prototype.initialize = function() {\n    this.entity.collision.on('triggerenter', this.onKeyPickupTriggerEnter, this);\n};\n\nRedKeyPickup.prototype.update = function() {\n    this.entity.rotate(0,10,0);\n};\n\nRedKeyPickup.prototype.onKeyPickupTriggerEnter = function(entity) {\n    if (entity.name == \"Character\"){\n        hasRedKey = true;\n        var cc = this.Red_Player.script.get('charactercontroller');\n        cc.actionText.element.text = \"PICKED UP RED KEY\";\n        this.Red_UI.enabled = true;\n        this.entity.sound.play(\"Pickup\");\n        this.entity.destroy();\n    }\n};\n\n","// red_doorTrigger.js\nvar Red_DoorTrigger = pc.createScript('redDoorTrigger');\n\nvar r_active = false;\nvar r_open = false;\nvar r_intransit = false;\nvar r_timing = true;\nvar r_colliding = false;\nvar r_collidedPlayerController = null;\n\nRed_DoorTrigger.attributes.add('Red_DoorToManage', {type: 'entity'});\nRed_DoorTrigger.attributes.add('Red_DoorOpenPoint', {type: 'entity'});\nRed_DoorTrigger.attributes.add(\"Red_DoorOrigin\", {type: 'entity'});\nRed_DoorTrigger.attributes.add(\"Red_Player\", {type: 'entity'});\n\n// initialize code called once per entity\nRed_DoorTrigger.prototype.initialize = function() {\n    this.entity.collision.on('triggerenter', this.onRed_DoorTriggerEnter, this);\n    this.entity.collision.on('triggerleave', this.onRed_DoorTriggerExit, this);\n};\n\nRed_DoorTrigger.prototype.update = function() {\n    //If the E Key is pressed\n    this.app.keyboard.on(pc.EVENT_KEYUP, this.onKeyUp, this);\n    \n    //If the Red_Door is in transit\n    //If the Red_Door is r_open\n    if (hasRedKey){\n        if (!r_open &&r_intransit) {this.Red_DoorToManage.translate(0,0.01,0);}\n\n        if (!r_open &&r_intransit && this.Red_DoorToManage.getPosition().y >= this.Red_DoorOpenPoint.getPosition().y){\n           r_intransit = false;\n            r_open = !r_open;\n            r_timing = true;\n        }\n\n        //If the Red_Door is closed\n        if (r_open &&r_intransit) {this.Red_DoorToManage.translate(0,-0.01,0);}\n\n        if (r_open &&r_intransit && this.Red_DoorToManage.getPosition().y <= this.Red_DoorOrigin.getPosition().y){\n           r_intransit = false;\n            r_open = !r_open;\n        }\n        //If some asshole left the Red_Door r_open\n        if (r_timing && r_open){\n            var x = setTimeout(function(){\n               r_intransit = true;\n                r_timing = false; \n            }, 2000);\n        }\n\n        if (r_collidedPlayerController !== null){\n            if (r_active && !r_intransit){r_collidedPlayerController.messageBox.enabled = true;}\n            else if (r_active &&r_intransit){r_collidedPlayerController.messageBox.enabled = false;}\n            else if (!r_active){r_collidedPlayerController.messageBox.enabled = false;}\n        }\n    }\n};\n\nRed_DoorTrigger.prototype.onRed_DoorTriggerEnter = function(entity) {\n    if (entity.tags.has('player') && !r_intransit && !r_open){\n        \n        /*\n        r_collidedPlayerController = entity.script.get('charactercontroller');\n        r_collidedPlayerController.messageBox.enabled = true;\n        */\n        if (hasRedKey){\n            var cc = this.Red_Player.script.get('charactercontroller');\n            cc.actionText.element.text = \"PRESS E TO OPEN THE DOOR\";\n        }\n        \n        r_active = true;\n    }\n};\n\nRed_DoorTrigger.prototype.onRed_DoorTriggerExit = function(entity) {\n    if (r_active){\n        \n        //r_collidedPlayerController.messageBox.enabled = false;\n        \n        r_active = false;\n        \n        var cc = this.Red_Player.script.get('charactercontroller');\n        cc.actionText.element.text = \"\";\n    }\n};\n\nRed_DoorTrigger.prototype.onKeyUp = function (event) {\n    if (r_active){\n        if (hasRedKey){\n            if (r_active && event.key == pc.KEY_E && !r_intransit){\n                //The Red_Door is now moving\n                r_intransit = true;\n                var cc = this.Red_Player.script.get('charactercontroller');\n                cc.actionText.element.text = \"OPENED THE Red DOOR WITH THE Red KEY\";\n                this.entity.sound.play(\"Door Open\");\n                this.entity.sound.play(\"Door Allow\");\n            }\n        } else if (r_active && event.key == pc.KEY_E && !r_intransit){\n            var cc = this.Red_Player.script.get('charactercontroller');\n            cc.actionText.element.text = \"A Red KEY IS REQUIRED TO OPEN THIS DOOR\";\n            this.entity.sound.play(\"Door Deny\");\n        }\n    }\n};\n\n","// warpJunction.js\nvar WarpJunction = pc.createScript('warpJunction');\nWarpJunction.attributes.add(\"Destination\", {type:\"entity\"});\nWarpJunction.attributes.add(\"WarpPlayer\", {type:\"entity\"});\n\n// initialize code called once per entity\nWarpJunction.prototype.initialize = function() {\n    this.entity.collision.on(\"triggerenter\", this.onContact, this);\n};\n\nWarpJunction.prototype.onContact = function(collision, dt){\n    if (collision.name == \"Character\"){\n        collision.rigidbody.teleport(this.Destination.getPosition());\n    }\n};\n\n"]}